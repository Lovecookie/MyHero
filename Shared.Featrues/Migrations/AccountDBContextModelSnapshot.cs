// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Shared.Features.DatabaseCore;

#nullable disable

namespace Shared.Featrues.Migrations
{
    [DbContext(typeof(AccountDBContext))]
    partial class AccountDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("account")
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Shared.Features.DatabaseCore.UserBasic", b =>
                {
                    b.Property<long>("UserUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("user_uid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("UserUID"));

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created")
                        .HasDefaultValueSql("NOW()");

                    b.Property<DateTime>("DateModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_modified")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)")
                        .HasColumnName("email");

                    b.Property<string>("EncryptedUID")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("encrypted_uid");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("password");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("picture_url");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("user_id");

                    b.HasKey("UserUID")
                        .HasName("pk_user_basics");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("UIX_UserBasic_Email");

                    b.HasIndex("UserID")
                        .IsUnique()
                        .HasDatabaseName("UIX_UserBasic_UserId");

                    b.ToTable("user_basics", "account");
                });

            modelBuilder.Entity("Shared.Features.DatabaseCore.UserPatronage", b =>
                {
                    b.Property<long>("UserUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("user_uid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("UserUID"));

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created")
                        .HasDefaultValueSql("NOW()");

                    b.Property<DateTime>("DateModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_modified")
                        .HasDefaultValueSql("NOW()");

                    b.Property<long>("FavoriteCount")
                        .HasColumnType("bigint")
                        .HasColumnName("favorite_count");

                    b.Property<long>("FollowerCount")
                        .HasColumnType("bigint")
                        .HasColumnName("follower_count");

                    b.Property<long>("FollowingCount")
                        .HasColumnType("bigint")
                        .HasColumnName("following_count");

                    b.Property<long>("StyleCount")
                        .HasColumnType("bigint")
                        .HasColumnName("style_count");

                    b.HasKey("UserUID")
                        .HasName("pk_user_patronages");

                    b.ToTable("user_patronages", "account");
                });

            modelBuilder.Entity("Shared.Features.DatabaseCore.UserRecognition", b =>
                {
                    b.Property<long>("UserUID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("user_uid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("UserUID"));

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_created")
                        .HasDefaultValueSql("NOW()");

                    b.Property<DateTime>("DateModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_modified")
                        .HasDefaultValueSql("NOW()");

                    b.Property<long>("FamousValue")
                        .HasColumnType("bigint")
                        .HasColumnName("famous_value");

                    b.HasKey("UserUID")
                        .HasName("pk_user_recognitions");

                    b.ToTable("user_recognitions", "account");
                });
#pragma warning restore 612, 618
        }
    }
}
